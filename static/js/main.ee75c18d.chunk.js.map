{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","isStarted","selectedValue","showGoods","_this","setState","concat","resetScreen","reversGoods","prevState","Object","toConsumableArray","reverse","sortAlphabet","sort","sortLength","a","b","length","handleChangeSelect","event","target","value","filter","elem","Number","this","_this$state","react_default","createElement","className","Fragment","type","onClick","onChange","map","item","index","React","Component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"8KAEMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgGaC,6MA5FXC,MAAQ,CACNC,MAAO,GACPC,WAAW,EACXC,cAAe,KAGnBC,UAAY,WACVC,EAAKC,SAAS,CACZL,MAAK,GAAAM,OAAMT,GACXI,WAAW,OAIfM,YAAc,WACZH,EAAKC,SAAS,CACZL,MAAK,GAAAM,OAAMT,GACXK,cAAe,OAInBM,YAAc,WACZJ,EAAKC,SAAS,SAAAI,GAAS,MAAK,CAC1BT,MAAOU,OAAAC,EAAA,EAAAD,CAAID,EAAUT,OAAOY,gBAIhCC,aAAe,WACbT,EAAKC,SAAS,CACZL,MAAO,GAAAM,OAAIT,GAAiBiB,YAIhCC,WAAa,WACXX,EAAKC,SAAS,SAAAI,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAMc,KAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,eAIvDC,mBAAqB,SAACC,GACpBhB,EAAKC,SAAS,CACZH,cAAekB,EAAMC,OAAOC,MAC5BtB,MAAO,GAAAM,OAAIT,GACR0B,OAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUO,OAAOL,EAAMC,OAAOC,OAAS,+EAIzD,IAELnB,EAMEuB,KANFvB,UACAK,EAKEkB,KALFlB,YACAD,EAIEmB,KAJFnB,YACAM,EAGEa,KAHFb,aACAE,EAEEW,KAFFX,WACAI,EACEO,KADFP,mBAPKQ,EAaHD,KAAK3B,MAHPE,EAVK0B,EAUL1B,UACAC,EAXKyB,EAWLzB,cACAF,EAZK2B,EAYL3B,MAGF,OACE4B,EAAAZ,EAAAa,cAAA,OAAKC,UAAU,OACbF,EAAAZ,EAAAa,cAAA,oBACC5B,GACC2B,EAAAZ,EAAAa,cAAAD,EAAAZ,EAAAe,SAAA,KACEH,EAAAZ,EAAAa,cAAA,UAAQG,KAAK,SAASC,QAASzB,GAA/B,WACAoB,EAAAZ,EAAAa,cAAA,UAAQG,KAAK,SAASC,QAASpB,GAA/B,uBAGAe,EAAAZ,EAAAa,cAAA,UAAQG,KAAK,SAASC,QAASlB,GAA/B,kBACAa,EAAAZ,EAAAa,cAAA,UACEP,MAAOpB,EACPgC,SAAUf,GAETtB,EAAgBsC,IAAI,SAACC,EAAMC,GAAP,OACnBT,EAAAZ,EAAAa,cAAA,UAAQP,MAAOe,GAAQA,EAAQ,MAEnCT,EAAAZ,EAAAa,cAAA,UAAQG,KAAK,SAASC,QAAS1B,GAA/B,SACAqB,EAAAZ,EAAAa,cAAA,UACG7B,EAAMmC,IAAI,SAAAC,GAAI,OAAIR,EAAAZ,EAAAa,cAAA,UAAKO,QAI5BnC,GACA2B,EAAAZ,EAAAa,cAAA,UAAQG,KAAK,SAASC,QAAS9B,GAA/B,iBAtFQmC,IAAMC,WCVxBC,IAASC,OAAOb,EAAAZ,EAAAa,cAACa,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.ee75c18d.chunk.js","sourcesContent":["import React from 'react';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n    state = {\n      goods: [],\n      isStarted: false,\n      selectedValue: 0,\n    };\n\n  showGoods = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      isStarted: true,\n    });\n  }\n\n  resetScreen = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      selectedValue: 0,\n    });\n  }\n\n  reversGoods = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabet = () => {\n    this.setState({\n      goods: [...goodsFromServer].sort(),\n    });\n  }\n\n  sortLength = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods.sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  handleChangeSelect = (event) => {\n    this.setState({\n      selectedValue: event.target.value,\n      goods: [...goodsFromServer]\n        .filter(elem => elem.length >= Number(event.target.value) + 1),\n    });\n  }\n\n  render() {\n    const {\n      showGoods,\n      reversGoods,\n      resetScreen,\n      sortAlphabet,\n      sortLength,\n      handleChangeSelect,\n    } = this;\n    const {\n      isStarted,\n      selectedValue,\n      goods,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods </h1>\n        {isStarted && (\n          <>\n            <button type=\"button\" onClick={reversGoods}>Reverse</button>\n            <button type=\"button\" onClick={sortAlphabet}>\n              Sort alphabetically\n            </button>\n            <button type=\"button\" onClick={sortLength}>Sort by length</button>\n            <select\n              value={selectedValue}\n              onChange={handleChangeSelect}\n            >\n              {goodsFromServer.map((item, index) => (\n                <option value={index}>{index + 1}</option>))}\n            </select>\n            <button type=\"button\" onClick={resetScreen}>Reset</button>\n            <ol>\n              {goods.map(item => <li>{item}</li>)}\n            </ol>\n          </>\n        )}\n        {!isStarted && (\n          <button type=\"button\" onClick={showGoods}>START</button>\n        )}\n      </div>\n\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}